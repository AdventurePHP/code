[DummyService-setter]
class = "APF\tests\suites\core\service\DummyService"
servicetype = "SINGLETON"

conf.string.method = "setParamOne"
conf.string.value = "foo"

; using vendor TEST mapped to folder test-config
init.service.method = "setParamTwo"
init.service.namespace = "TEST"
init.service.name = "DummyServiceTwo"

[DummyService-constructor]
class = "APF\tests\suites\core\service\DummyService"
servicetype = "SINGLETON"

construct.string.value = "foo"

; using vendor TEST mapped to folder test-config
construct.service.namespace = "TEST"
construct.service.name = "DummyServiceTwo"

[DummyService-constructor-fail]
class = "APF\tests\suites\core\service\DummyService"
servicetype = "SINGLETON"

construct.string.value = "foo"

; using vendor TEST mapped to folder test-config
construct.service.name-space = "TEST"
construct.service.na-me = "DummyServiceTwo"

[DummyServiceTwo]
class = "APF\tests\suites\core\service\DummyServiceTwo"
servicetype = "SINGLETON"

[DummyService-set-param-fail-method]
class = "APF\tests\suites\core\service\DummyService"
servicetype = "SINGLETON"

conf.string.value = "foo"

; testing exception in case of conf.string.method missing
[DummyService-setter-method-fail-1]
class = "APF\tests\suites\core\service\DummyService"
servicetype = "SINGLETON"

conf.string.value = "foo"

; testing exception in case of conf.string.method points to unknown method
[DummyService-setter-method-fail-2]
class = "APF\tests\suites\core\service\DummyService"
servicetype = "SINGLETON"

conf.string.method = "unknownMethod"
conf.string.value = "foo"

; testing injection of multiple parameters per
[DummyServiceThree]
class = "APF\tests\suites\core\service\DummyServiceThree"
servicetype = "NORMAL"

conf.string.method = "setThreeParams"
conf.string.value.1 = "foo"
conf.string.value.Two = "bar"
conf.string.value.3 = "baz"

; testing missing value sub section
[DummyServiceThree-missing-value-section]
class = "APF\tests\suites\core\service\DummyServiceThree"
servicetype = "NORMAL"

conf.string.method = "setThreeParams"